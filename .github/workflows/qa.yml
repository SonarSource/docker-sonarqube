name: QA

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:

  public_image_build_and_test:
    if: github.event_name == 'schedule' && github.repository == 'sonarsource/docker-sonarqube'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Public Image test
        run: ./run-public-image-tests.sh

  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version: [8/community, 8/developer, 8/enterprise, 9/community, 9/developer, 9/enterprise]
        include:
          - version: 8/community
            tag: 8-community
          - version: 8/developer
            tag: 8-developer
          - version: 8/enterprise
            tag: 8-enterprise
          - version: 9/community
            tag: 9-community
          - version: 9/developer
            tag: 9-developer
          - version: 9/enterprise
            tag: 9-enterprise
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t "sonarqube:${{ matrix.tag }}" "${{ matrix.version }}"
      - name: Test image
        run: ./run-tests.sh "sonarqube:${{ matrix.tag }}" "docker"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "sonarqube:${{ matrix.tag }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      - name: Generate CycloneDX SBOM
        run: |
          curl -sSfL https://raw.githubusercontent.com/docker/sbom-cli-plugin/v0.6.0/install.sh -o install.sh
          md5sum -c <(echo "f4f928096f6e7ea099ad61b0879d221a  install.sh")
          sh ./install.sh v0.6.0 && rm install.sh
          docker sbom --quiet --format cyclonedx-json --output "${{ matrix.version }}/bom.json" "sonarqube:${{ matrix.tag }}"
      - name: Sign CycloneDX SBOM
        env:
          GPG_PRIVATE_KEY_BASE64: ${{ secrets.GPG_PRIVATE_KEY_BASE64 }}
          GPG_PRIVATE_KEY_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
        run: |
          export GNUPGHOMEDIR=gnupg/
          mkdir --parent "${GNUPGHOMEDIR}"
          echo "${GPG_PRIVATE_KEY_PASSPHRASE}" | gpg --batch --pinentry-mode loopback --passphrase-fd 0 --quiet --import <(echo "${GPG_PRIVATE_KEY_BASE64}")
          echo "${GPG_PRIVATE_KEY_PASSPHRASE}" | gpg --batch --pinentry-mode loopback --passphrase-fd 0 --quiet --detach-sign --armor "${{ matrix.version }}/bom.json"
          rm -rf "${GNUPGHOMEDIR}"
      - uses: actions/upload-artifact@v3
        with:
          name: "sonarqube-${{ matrix.tag }}-sbom"
          path: "${{ matrix.version }}/bom.*"

  build_and_test_dce:
    strategy:
      fail-fast: false
      matrix:
        version: [8/datacenter, 9/datacenter]
        include:
          - version: 8/datacenter
            tag: 8-datacenter
          - version: 9/datacenter
            tag: 9-datacenter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t "sonarqube:${{ matrix.tag }}-app" "${{ matrix.version }}/app" && docker build -t "sonarqube:${{ matrix.tag }}-search" "${{ matrix.version }}/search"
      - name: Test image
        run: ./run-tests.sh "sonarqube:${{ matrix.tag }}-app" "docker-compose"
      - name: Run Trivy vulnerability scanner for App image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "sonarqube:${{ matrix.tag }}-app"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      - name: Run Trivy vulnerability scanner for Search image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "sonarqube:${{ matrix.tag }}-search"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      - name: Generate CycloneDX SBOM
        run: |
          curl -sSfL https://raw.githubusercontent.com/docker/sbom-cli-plugin/v0.6.0/install.sh -o install.sh
          md5sum -c <(echo "f4f928096f6e7ea099ad61b0879d221a  install.sh")
          sh ./install.sh v0.6.0 && rm install.sh
          docker sbom --quiet --format cyclonedx-json --output "${{ matrix.version }}/app/bom.json" "sonarqube:${{ matrix.tag }}-app"
          docker sbom --quiet --format cyclonedx-json --output "${{ matrix.version }}/search/bom.json" "sonarqube:${{ matrix.tag }}-search"
      - name: Sign CycloneDX SBOM
        env:
          GPG_PRIVATE_KEY_BASE64: ${{ secrets.GPG_PRIVATE_KEY_BASE64 }}
          GPG_PRIVATE_KEY_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
        run: |
          export GNUPGHOMEDIR=gnupg/
          mkdir --parent "${GNUPGHOMEDIR}"
          echo "${GPG_PRIVATE_KEY_PASSPHRASE}" | gpg --batch --pinentry-mode loopback --passphrase-fd 0 --quiet --import <(echo "${GPG_PRIVATE_KEY_BASE64}")
          echo "${GPG_PRIVATE_KEY_PASSPHRASE}" | gpg --batch --pinentry-mode loopback --passphrase-fd 0 --quiet --detach-sign --armor "${{ matrix.version }}/app/bom.json"
          echo "${GPG_PRIVATE_KEY_PASSPHRASE}" | gpg --batch --pinentry-mode loopback --passphrase-fd 0 --quiet --detach-sign --armor "${{ matrix.version }}/search/bom.json"
          rm -rf "${GNUPGHOMEDIR}"
      - uses: actions/upload-artifact@v3
        with:
          name: "sonarqube-${{ matrix.tag }}-sbom"
          path: "${{ matrix.version }}/*/bom.*"
