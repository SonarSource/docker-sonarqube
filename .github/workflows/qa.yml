name: QA

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:

  public_image_build_and_test:
    if: github.event_name == 'schedule' && github.repository == 'sonarsource/docker-sonarqube'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Public Image test
        run: ./run-public-image-tests.sh

  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version: [7/community, 8/community, 8/developer, 8/enterprise, 9/community, 9/developer, 9/enterprise]
        include:
          - version: 7/community
            tag: 7-community
          - version: 8/community
            tag: 8-community
          - version: 8/developer
            tag: 8-developer
          - version: 8/enterprise
            tag: 8-enterprise
          - version: 9/community
            tag: 9-community
          - version: 9/developer
            tag: 9-developer
          - version: 9/enterprise
            tag: 9-enterprise
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t "sonarqube:${{ matrix.tag }}" "${{ matrix.version }}"
      - name: Test image
        run: ./run-tests.sh "sonarqube:${{ matrix.tag }}" "docker"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "sonarqube:${{ matrix.tag }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'

  build_and_test_dce:
    strategy:
      fail-fast: false
      matrix:
        version: [8/datacenter, 9/datacenter]
        include:
          - version: 8/datacenter
            tag: 8-datacenter
          - version: 9/datacenter
            tag: 9-datacenter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t "sonarqube:${{ matrix.tag }}-app" "${{ matrix.version }}/app" && docker build -t "sonarqube:${{ matrix.tag }}-search" "${{ matrix.version }}/search"
      - name: Test image
        run: ./run-tests.sh "sonarqube:${{ matrix.tag }}-app" "docker-compose"
      - name: Run Trivy vulnerability scanner for App image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "sonarqube:${{ matrix.tag }}-app"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      - name: Run Trivy vulnerability scanner for Search image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "sonarqube:${{ matrix.tag }}-search"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'