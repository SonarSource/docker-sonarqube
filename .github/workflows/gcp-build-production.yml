name: GCP build production

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      trigger_type:
        description: 'Trigger type'
        required: false
        default: 'dry-run'
        type: choice
        options:
          - dry-run
          - PUSH_GCP_PROD_IMAGES
  release:
    types: [published]

jobs:
  load-config:
    uses: ./.github/workflows/load-config.yml

  gcp-build-production-app:
    needs: load-config
    permissions:
      id-token: write
      contents: read
    name: GCP build production (app)
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'release' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.trigger_type == 'PUSH_GCP_PROD_IMAGES')
    uses: ./.github/workflows/gcp-build-template.yml
    with:
      gcp_registry: ${{ needs.load-config.outputs.gcp_public_registry }}
      gcp_product_name: ${{ needs.load-config.outputs.gcp_public_product }}
      build_type: production
      platforms: linux/amd64
      current_version: ${{ needs.load-config.outputs.current_version }}
      public_image_name: ${{ needs.load-config.outputs.public_image }}
      component_type: app

  gcp-build-production-search:
    needs: load-config
    permissions:
      id-token: write
      contents: read
    name: GCP build production (search)
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'release' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.trigger_type == 'PUSH_GCP_PROD_IMAGES')
    uses: ./.github/workflows/gcp-build-template.yml
    with:
      gcp_registry: ${{ needs.load-config.outputs.gcp_public_registry }}
      gcp_product_name: ${{ needs.load-config.outputs.gcp_public_product }}
      build_type: production
      platforms: linux/amd64
      current_version: ${{ needs.load-config.outputs.current_version }}
      public_image_name: ${{ needs.load-config.outputs.public_image }}
      component_type: search
